{"version":3,"file":"main.bundle.js","sources":["webpack:///./~/rxjs/add/observable/of.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.resolver.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/environment.ts","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/error/error.template.html","webpack:///./src/app/index.ts","webpack:///./src/main.browser.ts"],"sourcesContent":["\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = ./node_modules/rxjs/add/observable/of.js\n// module chunks = 3","/*\r\n * Angular 2 decorators and services\r\n */\r\nimport { Component, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { AppState } from './app.service';\r\n\r\n/*\r\n * App Component\r\n * Top Level Component\r\n */\r\n@Component({\r\n  selector: 'app',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [\r\n    require('./scss/application.scss')\r\n  ],\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class App {\r\n\r\n  constructor(\r\n    public appState: AppState) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Initial App State', this.appState.state);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/app.component.ts","import { Injectable } from '@angular/core';\r\n\r\ndeclare let jQuery: any;\r\n\r\n@Injectable()\r\nexport class AppConfig {\r\n  config = {\r\n    name: 'sing',\r\n    title: 'Sing Dashboard App with Angular 2.0 support by Flatlogic',\r\n    version: '3.2.0',\r\n    /**\r\n     * Whether to print and alert some log information\r\n     */\r\n    debug: true,\r\n    /**\r\n     * In-app constants\r\n     */\r\n    settings: {\r\n      colors: {\r\n        'white': '#fff',\r\n        'black': '#000',\r\n        'gray-light': '#999',\r\n        'gray-lighter': '#eee',\r\n        'gray': '#666',\r\n        'gray-dark': '#343434',\r\n        'gray-darker': '#222',\r\n        'gray-semi-light': '#777',\r\n        'gray-semi-lighter': '#ddd',\r\n        'brand-primary': '#5d8fc2',\r\n        'brand-success': '#64bd63',\r\n        'brand-warning': '#f0b518',\r\n        'brand-danger': '#dd5826',\r\n        'brand-info': '#5dc4bf'\r\n      },\r\n      screens: {\r\n        'xs-max': 543,\r\n        'sm-min': 544,\r\n        'sm-max': 767,\r\n        'md-min': 768,\r\n        'md-max': 991,\r\n        'lg-min': 992,\r\n        'lg-max': 1199,\r\n        'xl-min': 1200\r\n      },\r\n      navCollapseTimeout: 2500\r\n    },\r\n\r\n    /**\r\n     * Application state. May be changed when using.\r\n     * Synced to Local Storage\r\n     */\r\n    state: {\r\n      /**\r\n       * whether navigation is static (prevent automatic collapsing)\r\n       */\r\n      'nav-static': false\r\n    }\r\n  };\r\n\r\n  _resizeCallbacks = [];\r\n  _screenSizeCallbacks = {\r\n    xs: {enter: [], exit: []},\r\n    sm: {enter: [], exit: []},\r\n    md: {enter: [], exit: []},\r\n    lg: {enter: [], exit: []},\r\n    xl: {enter: [], exit: []}\r\n  };\r\n\r\n  isScreen(size): boolean {\r\n    let screenPx = window.innerWidth;\r\n    return (screenPx >= this.config.settings.screens[size + '-min'] || size === 'xs')\r\n      && (screenPx <= this.config.settings.screens[size + '-max'] || size === 'xl');\r\n  }\r\n\r\n  getScreenSize(): string {\r\n    let screenPx = window.innerWidth;\r\n    if (screenPx <= this.config.settings.screens['xs-max']) { return 'xs'; }\r\n    if ((screenPx >= this.config.settings.screens['sm-min'])\r\n      && (screenPx <= this.config.settings.screens['sm-max'])) { return 'sm'; }\r\n    if ((screenPx >= this.config.settings.screens['md-min'])\r\n      && (screenPx <= this.config.settings.screens['md-max'])) { return 'md'; }\r\n    if ((screenPx >= this.config.settings.screens['lg-min'])\r\n      && (screenPx <= this.config.settings.screens['lg-max'])) { return 'lg'; }\r\n    if (screenPx >= this.config.settings.screens['xl-min']) { return 'xl'; }\r\n  }\r\n\r\n  onScreenSize(size, fn, /* Boolean= */ onEnter): void {\r\n    onEnter = typeof onEnter !== 'undefined' ? onEnter : true;\r\n    if (typeof size === 'object') {\r\n      for (let i = 0; i < size.length; i++) {\r\n        this._screenSizeCallbacks[size[i]][onEnter ? 'enter' : 'exit'].push(fn);\r\n      }\r\n    } else {\r\n      this._screenSizeCallbacks[size][onEnter ? 'enter' : 'exit'].push(fn);\r\n    }\r\n\r\n  }\r\n\r\n  changeColor(color, ratio, darker): string {\r\n    let pad = function (num, totalChars): number {\r\n      let padVal = '0';\r\n      num = num + '';\r\n      while (num.length < totalChars) {\r\n        num = padVal + num;\r\n      }\r\n      return num;\r\n    };\r\n    // Trim trailing/leading whitespace\r\n    color = color.replace(/^\\s*|\\s*$/, '');\r\n\r\n    // Expand three-digit hex\r\n    color = color.replace(\r\n      /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i,\r\n      '#$1$1$2$2$3$3'\r\n    );\r\n\r\n    // Calculate ratio\r\n    let difference = Math.round(ratio * 256) * (darker ? -1 : 1),\r\n    // Determine if input is RGB(A)\r\n      rgb = color.match(new RegExp('^rgba?\\\\(\\\\s*' +\r\n        '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])' +\r\n        '\\\\s*,\\\\s*' +\r\n        '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])' +\r\n        '\\\\s*,\\\\s*' +\r\n        '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])' +\r\n        '(?:\\\\s*,\\\\s*' +\r\n        '(0|1|0?\\\\.\\\\d+))?' +\r\n        '\\\\s*\\\\)$'\r\n        , 'i')),\r\n      alpha = !!rgb && rgb[4] !== null ? rgb[4] : null,\r\n\r\n    // Convert hex to decimal\r\n      decimal = !!rgb ? [rgb[1], rgb[2], rgb[3]] : color.replace(\r\n        /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\r\n        function (): string {\r\n          return parseInt(arguments[1], 16) + ',' +\r\n            parseInt(arguments[2], 16) + ',' +\r\n            parseInt(arguments[3], 16);\r\n        }\r\n      ).split(/,/);\r\n\r\n    // Return RGB(A)\r\n    return !!rgb ?\r\n    'rgb' + (alpha !== null ? 'a' : '') + '(' +\r\n    Math[darker ? 'max' : 'min'](\r\n      parseInt(decimal[0], 10) + difference, darker ? 0 : 255\r\n    ) + ', ' +\r\n    Math[darker ? 'max' : 'min'](\r\n      parseInt(decimal[1], 10) + difference, darker ? 0 : 255\r\n    ) + ', ' +\r\n    Math[darker ? 'max' : 'min'](\r\n      parseInt(decimal[2], 10) + difference, darker ? 0 : 255\r\n    ) +\r\n    (alpha !== null ? ', ' + alpha : '') +\r\n    ')' :\r\n      // Return hex\r\n      [\r\n        '#',\r\n        pad(Math[darker ? 'max' : 'min'](\r\n          parseInt(decimal[0], 10) + difference, darker ? 0 : 255\r\n        ).toString(16), 2),\r\n        pad(Math[darker ? 'max' : 'min'](\r\n          parseInt(decimal[1], 10) + difference, darker ? 0 : 255\r\n        ).toString(16), 2),\r\n        pad(Math[darker ? 'max' : 'min'](\r\n          parseInt(decimal[2], 10) + difference, darker ? 0 : 255\r\n        ).toString(16), 2)\r\n      ].join('');\r\n  }\r\n\r\n  lightenColor(color, ratio): any {\r\n    return this.changeColor(color, ratio, false);\r\n  }\r\n\r\n  darkenColor(color, ratio): any {\r\n    return this.changeColor(color, ratio, true);\r\n  }\r\n\r\n  max(array): any {\r\n    return Math.max.apply(null, array);\r\n  }\r\n\r\n  min(array): any {\r\n    return Math.min.apply(null, array);\r\n  }\r\n\r\n  _initResizeEvent(): void {\r\n    let resizeTimeout;\r\n\r\n    jQuery(window).on('resize', () => {\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => {\r\n        jQuery(window).trigger('sn:resize');\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  _initOnScreenSizeCallbacks(): void  {\r\n    let resizeTimeout,\r\n      prevSize = this.getScreenSize();\r\n\r\n    jQuery(window).resize(() => {\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => {\r\n        let size = this.getScreenSize();\r\n        if (size !== prevSize) { // run only if something changed\r\n          // run exit callbacks first\r\n          this._screenSizeCallbacks[prevSize].exit.forEach((fn) => {\r\n            fn(size, prevSize);\r\n          });\r\n          // run enter callbacks then\r\n          this._screenSizeCallbacks[size].enter.forEach((fn) => {\r\n            fn(size, prevSize);\r\n          });\r\n          console.log('screen changed. new: ' + size + ', old: ' + prevSize);\r\n        }\r\n        prevSize = size;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  constructor() {\r\n    this._initResizeEvent();\r\n    this._initOnScreenSizeCallbacks();\r\n  }\r\n\r\n  getConfig(): Object {\r\n    return this.config;\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/app.config.ts","import { NgModule, ApplicationRef } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { removeNgStyles, createNewHosts, createInputTransfer } from '@angularclass/hmr';\r\n\r\n/*\r\n * Platform and Environment providers/directives/pipes\r\n */\r\nimport { ENV_PROVIDERS } from './environment';\r\nimport { ROUTES } from './app.routes';\r\n// App is our top level component\r\nimport { App } from './app.component';\r\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\r\nimport { AppState, InteralStateType } from './app.service';\r\nimport { AppConfig } from './app.config';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n// Application wide providers\r\nconst APP_PROVIDERS = [\r\n  ...APP_RESOLVER_PROVIDERS,\r\n  AppState,\r\n  AppConfig\r\n];\r\n\r\ntype StoreType = {\r\n  state: InteralStateType,\r\n  restoreInputValues: () => void,\r\n  disposeOldHosts: () => void\r\n};\r\n\r\n/**\r\n * `AppModule` is the main entry point into Angular2's bootstraping process\r\n */\r\n@NgModule({\r\n  bootstrap: [ App ],\r\n  declarations: [\r\n    App,\r\n    ErrorComponent\r\n  ],\r\n  imports: [ // import Angular's modules\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(ROUTES, { useHash: true })\r\n  ],\r\n  providers: [ // expose our Services and Providers into Angular's dependency injection\r\n    ENV_PROVIDERS,\r\n    APP_PROVIDERS\r\n  ]\r\n})\r\nexport class AppModule {\r\n  constructor(public appRef: ApplicationRef, public appState: AppState) {}\r\n\r\n  hmrOnInit(store: StoreType) {\r\n    if (!store || !store.state) return;\r\n    console.log('HMR store', JSON.stringify(store, null, 2));\r\n    // set state\r\n    this.appState._state = store.state;\r\n    // set input values\r\n    if ('restoreInputValues' in store) {\r\n      let restoreInputValues = store.restoreInputValues;\r\n      setTimeout(restoreInputValues);\r\n    }\r\n\r\n    this.appRef.tick();\r\n    delete store.state;\r\n    delete store.restoreInputValues;\r\n  }\r\n\r\n  hmrOnDestroy(store: StoreType) {\r\n    const cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\r\n    // save state\r\n    const state = this.appState._state;\r\n    store.state = state;\r\n    // recreate root elements\r\n    store.disposeOldHosts = createNewHosts(cmpLocation);\r\n    // save input values\r\n    store.restoreInputValues  = createInputTransfer();\r\n    // remove styles\r\n    removeNgStyles();\r\n  }\r\n\r\n  hmrAfterDestroy(store: StoreType) {\r\n    // display new elements\r\n    store.disposeOldHosts();\r\n    delete store.disposeOldHosts;\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/app.module.ts","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\n\r\n@Injectable()\r\nexport class DataResolver implements Resolve<any> {\r\n  constructor() {\r\n\r\n  }\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return Observable.of({ res: 'I am data'});\r\n  }\r\n}\r\n\r\n// an array of services to resolve routes with data\r\nexport const APP_RESOLVER_PROVIDERS = [\r\n  DataResolver\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/app.resolver.ts","import { Routes } from '@angular/router';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n\r\nexport const ROUTES: Routes = [{\r\n   path: '', redirectTo: 'app', pathMatch: 'full'\r\n  }, {\r\n    path: 'app',   loadChildren: () => System.import('./layout/layout.module').then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\r\n  }, {\r\n    path: 'login', loadChildren: () => System.import('./login/login.module').then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\r\n  }, {\r\n    path: 'error', component: ErrorComponent\r\n  }, {\r\n    path: '**',    component: ErrorComponent\r\n  }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/app.routes.ts","import { Injectable } from '@angular/core';\r\n\r\nexport type InteralStateType = {\r\n  [key: string]: any\r\n};\r\n\r\n@Injectable()\r\nexport class AppState {\r\n  _state: InteralStateType = { };\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  // already return a clone of the current state\r\n  get state() {\r\n    return this._state = this._clone(this._state);\r\n  }\r\n  // never allow mutation\r\n  set state(value) {\r\n    throw new Error('do not mutate the `.state` directly');\r\n  }\r\n\r\n\r\n  get(prop?: any) {\r\n    // use our state getter for the clone\r\n    const state = this.state;\r\n    return state.hasOwnProperty(prop) ? state[prop] : state;\r\n  }\r\n\r\n  set(prop: string, value: any) {\r\n    // internally mutate our state\r\n    return this._state[prop] = value;\r\n  }\r\n\r\n\r\n  private _clone(object: InteralStateType) {\r\n    // simple object clone\r\n    return JSON.parse(JSON.stringify( object ));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/app.service.ts","\r\n// Angular 2\r\n// rc2 workaround\r\nimport { enableDebugTools, disableDebugTools } from '@angular/platform-browser';\r\nimport { enableProdMode, ApplicationRef } from '@angular/core';\r\n// Environment Providers\r\nlet PROVIDERS: any[] = [\r\n  // common env directives\r\n];\r\n\r\n// Angular debug tools in the dev console\r\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\r\nlet _decorateModuleRef = function identity<T>(value: T): T { return value; };\r\n\r\nif ('production' === ENV) {\r\n  // Production\r\n  disableDebugTools();\r\n  enableProdMode();\r\n\r\n  PROVIDERS = [\r\n    ...PROVIDERS,\r\n    // custom providers in production\r\n  ];\r\n\r\n} else {\r\n\r\n  _decorateModuleRef = (modRef: any) => {\r\n    const appRef = modRef.injector.get(ApplicationRef);\r\n    const cmpRef = appRef.components[0];\r\n\r\n    let _ng = (<any>window).ng;\r\n    enableDebugTools(cmpRef);\r\n    (<any>window).ng.probe = _ng.probe;\r\n    (<any>window).ng.coreTokens = _ng.coreTokens;\r\n    return modRef;\r\n  };\r\n\r\n  // Development\r\n  PROVIDERS = [\r\n    ...PROVIDERS,\r\n    // custom providers in development\r\n  ];\r\n\r\n}\r\n\r\nexport const decorateModuleRef = _decorateModuleRef;\r\n\r\nexport const ENV_PROVIDERS = [\r\n  ...PROVIDERS\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/environment.ts","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'error',\r\n  styles: [ require('./error.style.scss') ],\r\n  template: require('./error.template.html'),\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'error-page app'\r\n  },\r\n})\r\nexport class ErrorComponent {\r\n  router: Router;\r\n\r\n  constructor(router: Router) {\r\n    this.router = router;\r\n  }\r\n\r\n  searchResult(): void {\r\n    this.router.navigate(['/app', 'extra', 'search']);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/error/error.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"error-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xl-4 col-md-6 col-xs-10 offset-xl-4 offset-md-3 offset-xs-1\\\">\\r\\n        <div class=\\\"error-container\\\">\\r\\n          <h1 class=\\\"error-code\\\">404</h1>\\r\\n          <p class=\\\"error-info\\\">\\r\\n            Opps, it seems that this page does not exist.\\r\\n          </p>\\r\\n          <p class=\\\"error-help mb\\\">\\r\\n            If you are sure it should, search for it.\\r\\n          </p>\\r\\n          <form (ngSubmit)=\\\"searchResult()\\\" method=\\\"get\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input class=\\\"form-control input-no-border\\\" type=\\\"text\\\" placeholder=\\\"Search Pages\\\">\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\"  class=\\\"btn btn-inverse\\\">\\r\\n              Search <i class=\\\"fa fa-search text-warning ml-xs\\\"></i>\\r\\n            </button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n\\r\\n  <footer class=\\\"page-footer\\\">\\r\\n    2016 &copy; Sing. Admin Dashboard Template.\\r\\n  </footer>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/error/error.template.html\n// module id = ./src/app/error/error.template.html\n// module chunks = 3","// App\r\nexport * from './app.module';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/index.ts","/*\r\n * Angular bootstraping\r\n */\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { decorateModuleRef } from './app/environment';\r\nimport { bootloader } from '@angularclass/hmr';\r\n/*\r\n * App Module\r\n * our top level module that holds all of our components\r\n */\r\nimport { AppModule } from './app';\r\n\r\n/*\r\n * Bootstrap our Angular app with a top level NgModule\r\n */\r\nexport function main(): Promise<any> {\r\n  return platformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .then(decorateModuleRef)\r\n    .catch(err => console.error(err));\r\n}\r\n\r\n// needed for hmr\r\n// in prod this is replace for document ready\r\nbootloader(main);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/main.browser.ts"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;;AAEA;AACA;AAEA;AAEA;;;AAGA;AASA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAjBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAYA;;AAAA;AAXA;;;;;;;;;;ACnBA;AAKA;AAwNA;AAvNA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA4JA;AACA;AACA;AA5JA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAhOA;AAAA;;AAAA;AAiOA;AAAA;AAhOA;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAQA;;AAEA;AAkBA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AArDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAuCA;;AAAA;AAtCA;;;;;;;;;;ACnDA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAPA;AAAA;;AAAA;AAQA;AAAA;AAPA;AASA;AACA;AACA;AACA;;;;;;;;;;ACjBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACfA;AAOA;AAGA;AAFA;AAIA;AAGA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAjCA;AAAA;;AAAA;AAkCA;AAAA;AAjCA;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;;;AC/CA;AACA;AAWA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAlBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAWA;;AAAA;AAVA;;;;;;;;;;;;;;;ACZA;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;;;;;;ACDA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","sourceRoot":""}